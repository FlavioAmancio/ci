name: Entrega continua

on:
  workflow_call:

jobs: 

  ECS:
    runs-on: ubuntu-latest
    steps:
    - name: Configurando credenciais da aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ID_CHAVE_ACESSO }}
        aws-secret-access-key: ${{ secrets.CHAVE_SECRETA }}
        aws-region: us-east-2
        
    - name: Obtendo arquivo da tarefa
      run: aws ecs describe-task-definition --task-definition nome da minha tarefa --query taskDefinition > task-definition.json

    - name: Copia do task-definition
      run: cp task-definition.json task-definition.json.bkp
      
    - name: Colocar novo id de imagem em uma definição de tarefa no amazon ECS
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: Go
        image: amancioflaviodevops/go_ci:${{github.run_number}}
        environment-variables: |
          HOST= ${{ secrets.DBHOST }}
          USER= ${{ secrets.DBUSER }}
          PASSWORD= ${{ secrets.DBPASSWORD }}
          DBNAME= ${{ secrets.DBNAME }}
          DBPORT= ${{ secrets.DBPORT }}
          PORT= 8000
          
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: nome do nosso serviço
        cluster: nome do nosso cluster
        wait-for-service-stability: true

    - name: Requisição
      continue-on-error: true
      run: echo "REQUEST=0" >> $GITHUB_ENV ; sleep 30s ; wget //url que irá realizar o teste || echo "REQUEST=1" >> $GITHUB_ENV 

    - name: Deploy Amazon ECS task definition
      if: ${{ env.REQUEST != 0 }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json.bkp
        service: nome do nosso serviço
        cluster: nome do nosso cluster
        wait-for-service-stability: true   
